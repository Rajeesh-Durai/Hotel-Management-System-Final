// <auto-generated />
using System;
using HotelBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.Migrations.HotelDB
{
    [DbContext(typeof(HotelDBContext))]
    partial class HotelDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking.Models.BookingDetails", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int?>("CustomerDetailsCustId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomDetailsRoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerDetailsCustId");

                    b.HasIndex("RoomDetailsRoomId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.CustomerDetails", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustId"));

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.HotelDetails", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("HotelContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomsAvailable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("HotelDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomDetails", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("ChargePerDay")
                        .HasColumnType("int");

                    b.Property<int?>("HotelDetailsHotelId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelDetailsHotelId");

                    b.ToTable("RoomDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.BookingDetails", b =>
                {
                    b.HasOne("HotelBooking.Models.CustomerDetails", null)
                        .WithMany("BookingDetails")
                        .HasForeignKey("CustomerDetailsCustId");

                    b.HasOne("HotelBooking.Models.RoomDetails", null)
                        .WithMany("Bookings")
                        .HasForeignKey("RoomDetailsRoomId");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomDetails", b =>
                {
                    b.HasOne("HotelBooking.Models.HotelDetails", null)
                        .WithMany("RoomDetails")
                        .HasForeignKey("HotelDetailsHotelId");
                });

            modelBuilder.Entity("HotelBooking.Models.CustomerDetails", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.HotelDetails", b =>
                {
                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomDetails", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
